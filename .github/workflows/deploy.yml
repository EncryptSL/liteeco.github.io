name: Deploy Docusaurus to Organization Pages

# Triggers the workflow on pushes to the main branch or manual execution
on:
  push:
    branches:
      - main # Ensure this is your primary branch (e.g., main or master)
  workflow_dispatch:

# Permissions: 'pages' and 'id-token' are mandatory for the official deploy-pages@v4 action.
# 'contents: read' is usually the default, but we specify it for clarity.
permissions:
  contents: read
  pages: write
  id-token: write

# Ensures that only one deployment job runs at a time
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  deployment:
    runs-on: ubuntu-latest
    
    # Environment step is crucial for the official deploy-pages action
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetching full history is not necessary here
          fetch-depth: 0 

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies and Build Docusaurus site
        run: |
          npm install
          npm run build # This command compiles static files into the 'build' folder

      # ➡️ Step 1: Upload the built files as an artifact
      # This step does not require Git write permissions, only artifact upload access.
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build # The directory where Docusaurus stores the build output (default is 'build')

      # ➡️ Step 2: Deploy the artifact to Pages
      # This official action takes the artifact and deploys it using GitHub's internal mechanism,
      # bypassing the strict Git push permissions that often cause the 403 error.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4